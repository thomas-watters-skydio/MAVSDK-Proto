syntax = "proto3";

package mavsdk.rpc.command;

option java_package = "io.mavsdk.command";
option java_outer_classname = "CommandProto";

service CommandService {
    rpc SendCommandLong(SendCommandLongRequest) returns(SendCommandLongResponse) {}
}

message SendCommandLongRequest {
    CommandLong command = 1;
}

message CommandLong {
    uint32 target_system=1; // actually uint8
    uint32 target_component=2; // actually uint8
    uint32 command=3; // actually uint16
    uint32 confirmation=4; // actually uint8
    float param1 = 5; // PARAM1, see MAV_CMD enum
    float param2 = 6; // PARAM2, see MAV_CMD enum
    float param3 = 7; // PARAM3, see MAV_CMD enum
    float param4 = 8; // PARAM4, see MAV_CMD enum
    float param5 = 9; // PARAM5, see MAV_CMD enum
    float param6 = 10; // PARAM6, see MAV_CMD enum
    float param7 = 11; // PARAM7, see MAV_CMD enum
}

message SendCommandLongResponse {
    CommandResult command_result = 1;
}

message CommandResult {
    enum Result {
        RESULT_UNKNOWN = 0; // Unknown result
        RESULT_SUCCESS = 1; // Request was successful
        RESULT_NO_SYSTEM = 2; // No system is connected
        RESULT_CONNECTION_ERROR = 3; // Connection error
        RESULT_BUSY = 4; // Vehicle is busy
        RESULT_COMMAND_DENIED = 5; // Command refused by vehicle
        RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN = 6; // Command refused because landed state is unknown
        RESULT_COMMAND_DENIED_NOT_LANDED = 7; // Command refused because vehicle not landed
        RESULT_TIMEOUT = 8; // Request timed out
        RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN = 9; // Hybrid/VTOL transition support is unknown
        RESULT_NO_VTOL_TRANSITION_SUPPORT = 10; // Vehicle does not support hybrid/VTOL transitions
        RESULT_PARAMETER_ERROR = 11; // Error getting or setting parameter
        RESULT_UNSUPPORTED = 12; // Action not supported
    }

    Result result=1;
    string result_str = 2;
}
